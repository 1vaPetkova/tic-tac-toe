Oimport React from 'react';
imOport { useState } from 'react';
OA
const winningCombinations = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8],
  [0, 4, 8],
  [2, 4, 6]
];



export default function Game() {
  const [history, setHistory] = useState(Array(9).fill(null));
  const [xTurn, setXTurn] = useState(true);
  const currentSquares = history[history.length-1];

  function handlePlay(nextSquares) {
    setHistory([...history, nextSquares]);
    setXTurn(!xTurn);
  }

  return (
    <div className='game'>
      <div className='game-board'>
      <Board xTurn={xTurn} squares={currentSquares} onPlay={handlePlay}/>
      </div>
      <div className='game-info'>
        <ol>1</ol>
      </div>
    </div>
  );
}


function Board({ squares, xTurn, onPlay }) {
  function handleClick(index) {
    if (checkForWinner(squares) || squares[index]) return;
    const nextSquares = squares.slice();
    nextSquares[index] = xTurn ? 'X' : "O";
    onPlay(nextSquares);
  }

  const winner = checkForWinner(squares);
  let status;
  if (winner) {
    status = `The ${winner} wins the game!`
  } else {
    if (!squares.filter(s => s === null).length) {
      status = 'Nobody wins!' 
    } else {
      status = `The next player is: ${xTurn ? 'X' : 'O'}`
    }
  }

  return (
    <div>
      <div className='status'>{status}</div>
      <div className='board-row'>
        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />
        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />
        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />
      </div>
      <div className='board-row'>
        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />
        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />
        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />
      </div>
      <div className='board-row'>
        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />
        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />
        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />
      </div>
    </div>
  )
}


function Square({ value, onSquareClick}) {
  return <button className="square" onClick={onSquareClick}>{value}</button>;
}


function checkForWinner(squares) {
  let result = null;
  winningCombinations.forEach(([a, b, c]) => {
    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) result = squares[a];
  });
  return result;
}

